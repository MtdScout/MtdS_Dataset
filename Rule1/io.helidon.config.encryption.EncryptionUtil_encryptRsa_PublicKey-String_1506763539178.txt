const-string v[0-9]+, "RSA\/ECB\/OAEPWithSHA-256AndMGF1Padding"
[Throwable]invoke-direct \{(v[0-9]+, )*(v[0-9]+)?\}, Lio/helidon/config/encryption/ConfigEncryptionException;\.<init>:\(
[EXCEPTION]          Ljava/lang/Exception; -> 0x[0-9a-fA-F]{4}
const-string v[0-9]+, "Key must be provided for encryption"
const-string v[0-9]+, "Failed to encrypt using RSA key"
const-string v[0-9]+, "Secret value is too large\. Maximum of 190 bytes is allowed\."
const-string v[0-9]+, "Secret message must be provided to be encrypted"
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljava/util/Objects;\.requireNonNull:\(Ljava/lang/Object;Ljava/lang/String;\)Ljava/lang/Object;
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljava/util/Objects;\.requireNonNull:\(Ljava/lang/Object;Ljava/lang/String;\)Ljava/lang/Object;
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljava/lang/String;\.getBytes:\(Ljava/nio/charset/Charset;\)\[B
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.getInstance:\(Ljava/lang/String;\)Ljavax/crypto/Cipher;
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.init:\(ILjava/security/Key;\)V
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljava/lang/String;\.getBytes:\(Ljava/nio/charset/Charset;\)\[B
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.doFinal:\(\[B\)\[B
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljava/util/Base64;\.getEncoder:\(\)Ljava/util/Base64\$Encoder;
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljava/util/Base64\$Encoder;\.encodeToString:\(\[B\)Ljava/lang/String;
