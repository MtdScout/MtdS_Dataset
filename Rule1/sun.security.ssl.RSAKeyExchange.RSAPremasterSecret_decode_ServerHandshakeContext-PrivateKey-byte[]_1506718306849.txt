const-string v[0-9]+, "ssl,handshake"
[EXCEPTION]          Ljavax/crypto/BadPaddingException; -> 0x[0-9a-fA-F]{4}
[EXCEPTION]          Ljava/lang/UnsupportedOperationException; -> 0x[0-9a-fA-F]{4}
const-string v[0-9]+, ".* caused exception: .*"
const-string v[0-9]+, "TlsRsaPremasterSecret"
[EXCEPTION]          Ljava/security/InvalidKeyException; -> 0x[0-9a-fA-F]{4}
const-string v[0-9]+, "The Cipher provider .*"
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.getInstance:\(Ljava/lang/String;\)Ljavax/crypto/Cipher;
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.init:\(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;Ljava/security/SecureRandom;\)V
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.getProvider:\(\)Ljava/security/Provider;
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljava/security/Provider;\.getName:\(\)Ljava/lang/String;
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Lsun/security/util/KeyUtil;\.isOracleJCEProvider:\(Ljava/lang/String;\)Z
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.getInstance:\(Ljava/lang/String;\)Ljavax/crypto/Cipher;
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.init:\(ILjava/security/Key;\)V
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.doFinal:\(\[B\)\[B
invoke-static.* \{(v[0-9]+, )*(v[0-9]+)?\}, Lsun/security/util/KeyUtil;\.checkTlsPreMasterSecretKey:\(IILjava/security/SecureRandom;\[BZ\)\[B
invoke-(virtual|super|interface).* \{(v[0-9]+, )*(v[0-9]+)?\}, Ljavax/crypto/Cipher;\.unwrap:\(\[BLjava/lang/String;I\)Ljava/security/Key;
